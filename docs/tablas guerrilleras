Tablas banco

(ingresar en el respectivo orden)
(luego de crear la base de datos \c cajero)
(salir de la base de datos \q)
(mirar bases de datos \l)

CREATE DATABASE cajero;
-------------------------------------------------------
CREATE TABLE tipos_cuentas(id serial PRIMARY KEY, nombre varchar(60) not null);
-------------------------------------------------------
CREATE TABLE tipos_identificaciones(id serial PRIMARY KEY,nombre varchar(60) not null);
--------------------------------------------------------
CREATE TABLE estados(tipo_estado serial PRIMARY KEY,estado varchar(10) not null);
--------------------------------------------------------
CREATE TABLE clientes(id_cliente serial primary key, clave smallint not null,identificacion varchar(12) not null,
nombres varchar(30) not null, apellidos varchar(30) not null, cuenta varchar(15) not null,
saldo decimal(12,2) not null, tipo_identificacion smallint not null, tipo_cuenta smallint not null,
estado_tipo smallint not null,
CONSTRAINT FK_tipo_identificacion FOREIGN KEY (tipo_identificacion) REFERENCES tipos_identificaciones (id) MATCH SIMPLE,
CONSTRAINT FK_tipo_cuenta FOREIGN KEY (tipo_cuenta) REFERENCES tipos_cuentas (id) MATCH SIMPLE,
CONSTRAINT FK_estado_tipo FOREIGN KEY (estado_tipo) REFERENCES estados (tipo_estado) MATCH SIMPLE);
---------------------------------------------------------
CREATE TABLE transacciones (transaccion_id serial PRIMARY KEY, cliente_id integer not null ,fecha TIMESTAMP NOT NULL,movimiento char(1) NOT NULL,valor decimal(12,2) NOT NULL,
CONSTRAINT Fk_transaccion FOREIGN key (cliente_id) REFERENCES clientes (id_cliente));
----------------------------------------------------------
ingreso de datos (ingresar en orden)

insert into tipos_cuentas (id,nombre) values (1,'AHORROS');
insert into tipos_cuentas (id,nombre) values (2,'DEBITO');

insert into tipos_identificaciones (id,nombre) values (1,'CEDULA');
insert into tipos_identificaciones (id,nombre) values (2,'CEDULA EXTRANJERA');

insert into estados (tipo_estado,estado) values (1,'ACTIVO');
insert into estados (tipo_estado,estado) values (2,'INACTIVO');
insert into estados (tipo_estado,estado) values (3,'CONGELADO');

insert into clientes (id_cliente,identificacion,clave,nombres,apellidos,cuenta,saldo,tipo_identificacion,tipo_cuenta,estado_tipo) values (4,1234,2908000012,'Nicolas','Perez',3521,110000,2,1,2);
insert into clientes (id_cliente,identificacion,clave,nombres,apellidos,cuenta,saldo,tipo_identificacion,tipo_cuenta,estado_tipo) values (1,4567,1005840031,'Luis','Herrera',1040,1200000,1,2,1);
insert into clientes (id_cliente,identificacion,clave,nombres,apellidos,cuenta,saldo,tipo_identificacion,tipo_cuenta,estado_tipo) values (3,8901,4002213422,'Laura','Paramo',4321,1500000,2,2,1);
insert into clientes (id_cliente,identificacion,clave,nombres,apellidos,cuenta,saldo,tipo_identificacion,tipo_cuenta,estado_tipo) values (2,1234,100432112,'Jhon','Bravo',1243,900000,1,2,1);

insert into transacciones (transaccion_id,cliente_id,fecha,movimiento,valor) values(1,2,'2020-06-22 19:10:25-07','A',50000) ;
insert into transacciones (transaccion_id,cliente_id,fecha,movimiento,valor) values(2,2,'2019-06-22 19:10:25-07','A',50000) ;

-------------------------------------------------------------
consultas

buscar transacciones de la cuenta por su id
select * from transaccion inner join cliente on transaccion.cliente_id = cliente.id_cliente and cliente_id=x;
buscar todas las cuentas
select * from clientes;
buscar cuenta de un usuario por identificacion
select * from clientes where identificacion=x;

